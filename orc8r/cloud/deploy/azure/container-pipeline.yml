# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: PWD
    value: $(Build.SourcesDirectory)/orc8r/cloud/docker

steps:
- task: UsePythonVersion@0
  displayName: Use Python v3.x
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'
  name: pyTools
- task: Bash@3
  displayName: Install Python Dependencies
  inputs:
    targetType: 'inline'
    script: $(pyTools.pythonLocation)/bin/pip install pyyaml
- task: Bash@3
  displayName: TEMP - List Environment Variables
  inputs:
    targetType: 'inline'
    script: |
      echo "pwd = $PWD"
      docker images
- task: DockerCompose@0
  displayName: Build NMS Container images
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Alex - Subscription'
    azureContainerRegistry: '{"loginServer":"alexsonar.azurecr.io", "id" : "/subscriptions/df72d7e7-e980-42e2-8be9-e89f702836b6/resourceGroups/sonar/providers/Microsoft.ContainerRegistry/registries/alexsonar"}'
    dockerComposeFile: 'nms/fbcnms-projects/magmalte/docker-compose.yml'
    projectName: 
    qualifyImageNames: true
    action: 'Build services'
    additionalImageTags: 'v1.0.1'
    currentWorkingDirectory: '$(System.DefaultWorkingDirectory)/nms/fbcnms-projects/magmalte'
- task: DockerCompose@0
  displayName: Push NMS Container images
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Alex - Subscription'
    azureContainerRegistry: '{"loginServer":"alexsonar.azurecr.io", "id" : "/subscriptions/df72d7e7-e980-42e2-8be9-e89f702836b6/resourceGroups/sonar/providers/Microsoft.ContainerRegistry/registries/alexsonar"}'
    dockerComposeFile: 'nms/fbcnms-projects/magmalte/docker-compose.yml'
    projectName: 
    qualifyImageNames: true
    action: 'Push services'
    currentWorkingDirectory: '$(System.DefaultWorkingDirectory)/nms/fbcnms-projects/magmalte'
- task: PythonScript@0
  displayName: Build Magma Containers images
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'orc8r/cloud/docker/build.py'
    arguments: '-a'
    workingDirectory: 'orc8r/cloud/docker'
- task: Bash@3
  displayName: Publish Magma Container images
  inputs:
    targetType: 'inline'
    script: |
      docker images

      for image in proxy controller prometheus-cache config-manager grafana
      do
          $(System.DefaultWorkingDirectory)/orc8r/tools/docker/publish.sh -r alexsonar.azurecr.io -i ${image} -v 'v1.0.1'
      done
# - task: DockerCompose@0
#   displayName: Push Magma Containers to ACR
#   inputs:
#     containerregistrytype: 'Azure Container Registry'
#     azureSubscription: 'Alex - Subscription'
#     azureContainerRegistry: '{"loginServer":"alexsonar.azurecr.io", "id" : "/subscriptions/df72d7e7-e980-42e2-8be9-e89f702836b6/resourceGroups/sonar/providers/Microsoft.ContainerRegistry/registries/alexsonar"}'
#     dockerComposeFile: 'orc8r/cloud/docker/docker-compose.yml'
#     additionalDockerComposeFiles: |
#       ./docker-compose.override.yml
#       ./docker-compose.metrics.yml
#     action: 'Push services'
#     additionalImageTags: 'v1.0.1'
#     currentWorkingDirectory: '$(System.DefaultWorkingDirectory)/orc8r/cloud/docker'